/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2012                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         Euler;
}

gradSchemes
{
    default         Gauss linear;
}

divSchemes
{
    default            none;
    div(phi,h)      Gauss upwind;
    div(phi,e)      Gauss upwind;
    div(phi,k)      Gauss upwind;
    div(phi,epsilon) Gauss upwind;
    div(phi,R)      Gauss upwind;
    div(phi,K)      Gauss linear;
    div(phi,Ekp)    Gauss linear;
    div(R)          Gauss linear;
    div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;
    div(phiv,p)     Gauss upwind;
    div(phi,U)         Gauss limitedLinearV 1;
    div(phi,y_AgNO3)     Gauss upwind; 
    div(phi,y_tannic)     Gauss upwind; 
    div(phi,y_tri)     Gauss upwind; 
    div(phi,y_H2O)     Gauss upwind; 
    div(phi,y_Agl)     Gauss upwind; 
    div(phi,y_Ags)     Gauss upwind; 
    div(phi,y_Ags2)     Gauss upwind; 
    div(phi,moment) Gauss upwind;
}

laplacianSchemes
{
    default                              Gauss linear corrected;
    laplacian((1|A(U)),p)                Gauss linear corrected;
    laplacian(D_AgNO3,y_AgNO3)           Gauss linear corrected;
    laplacian(D_tannic,y_tannic)           Gauss linear corrected;
    laplacian(D_tri,y_tri)           Gauss linear corrected;
    laplacian(D_H2O,y_H2O)           Gauss linear corrected;
    laplacian(D_Agl,y_Agl)           Gauss linear corrected;
    laplacian(D_Ags,y_Ags)           Gauss linear corrected;
    laplacian(D_Ags2,y_Ags2)           Gauss linear corrected;
}

interpolationSchemes
{
    default         linear;

    "interpolate\(moment.*\)" linear;

    reconstruct(U)          upwind;
    reconstruct(weight)     upwind;
    reconstruct(abscissa)   upwind;
    reconstruct(sigma)      upwind;
}

snGradSchemes
{
    default         corrected;
}

fluxRequired
{
    default         no;
    p_rgh;
}

wallDist
{
    method         meshWave;
}


// ************************************************************************* //
